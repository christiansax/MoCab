//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Logging
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public interface ITraceTarget 
	{
		int Count { get;set; }

		long Size { get;set; }

		DateTime TraceDate { get;set; }

		DateTime ModifiedDateTime { get;set; }

		DateTime CreatedDateTime { get;set; }

		long MaxCount { get;set; }

		long MaxSize { get;set; }

		string ComponentName { get;set; }

		string FileName { get;set; }

		string FilePath { get;set; }

		IEnumerable<TraceMessage> TraceMessages { get;set; }

		void All(string pMessage);

		void Detail(string pMessage);

		void EnterScope(string pMessage);

		void Error(string pMessage);

		void Exception(string pMessage);

		void ExitScope(string pMessage);

		void Information(string pMessage);

		void Warning(string pMessage);

		void All(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void Detail(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void EnterScope(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void Error(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void Exception(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void Information(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void Warning(string pMessage, int pLevel, string pComponentName, string Context, string pObjectId);

		void All(string pMessage, int pLevel);

		void Detail(string pMessage, int pLevel);

		void EnterScope(string pMessage, int pLevel);

		void Error(string pMessage, int pLevel);

		void Exception(string pMessage, int pLevel);

		void ExitScope(string pMessage, int pLevel);

		void Information(string pMessage, int pLevel);

		void Warning(string pMessage, int pLevel);

		void Initialize(string pPath);

		void Initialize(string pPath, string pFileName);

		void Initialize(string pPath, string pFileName, string pComponent);

		void Initialize(string pPath, string pFileName, string pComponent, long pMaxMessages, long pMaxSizeBytes);

		void All(TraceMessage pMessage);

		void Detail(TraceMessage pMessage);

		void EnterScope(TraceMessage pMessage);

		void Error(TraceMessage pMessage);

		void Exception(TraceMessage pMessage);

		void ExitScope(string pMessage, int pLevel, string pComponentName, string pContext, string pObjectId);

		void Information(TraceMessage pMessage);

		void Warning(TraceMessage pMessage);

	}
}


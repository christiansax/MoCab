//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Logging
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class BinaryTrace : ITraceTarget
	{
		public virtual void All(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Detail(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void EnterScope(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Error(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Exception(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void ExitScope(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Information(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Warning(string pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void All(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Detail(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void EnterScope(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Error(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Exception(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Information(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Warning(string pMessage, int pType, string pLevel, string pComponentName, string Context)
		{
			throw new System.NotImplementedException();
		}

		public virtual void All(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Detail(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void EnterScope(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Error(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Exception(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void ExitScope(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Information(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Warning(string pMessage, int pLevel)
		{
			throw new System.NotImplementedException();
		}

		public virtual ITraceTarget Initialize(string pPath;string)
		{
			throw new System.NotImplementedException();
		}

		public virtual ITraceTarget Initialize(string pPath;string, string pFileName)
		{
			throw new System.NotImplementedException();
		}

		public virtual ITraceTarget Initialize(string pPath;string, string pFileName, string pComponent)
		{
			throw new System.NotImplementedException();
		}

		public virtual ITraceTarget Initialize(string pPath;string, string pFileName, string pComponent, long pMaxMessages, long pMaxSizeBytes)
		{
			throw new System.NotImplementedException();
		}

		public virtual void All(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Detail(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void EnterScope(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Error(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Exception(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void ExitScope(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Information(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

		public virtual void Warning(TraceMessage pMessage)
		{
			throw new System.NotImplementedException();
		}

	}
}

